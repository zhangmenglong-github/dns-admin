<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zhangmenglong.platform.mapper.DnsDomainNameRecordMapper">
    
    <resultMap type="DnsDomainNameRecord" id="DnsDomainNameRecordResult">
        <result property="id"    column="id"    />
        <result property="domainNameId"    column="domain_name_id"    />
        <result property="recordName"    column="record_name"    />
        <result property="recordType"    column="record_type"    />
        <result property="recordGeo"    column="record_geo"    />
        <result property="recordTtl"    column="record_ttl"    />
        <result property="recordValue"    column="record_value"    />
        <result property="recordContent"    column="record_content"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectDnsDomainNameRecordVo">
        select id, domain_name_id, record_name, record_type, record_geo, record_ttl, record_value, record_content, create_time, update_time from dns_domain_name_record
    </sql>

    <select id="selectDnsDomainNameRecordList" parameterType="DnsDomainNameRecord" resultMap="DnsDomainNameRecordResult">
        <include refid="selectDnsDomainNameRecordVo"/>
        <where>  
            <if test="domainNameId != null "> and domain_name_id = #{domainNameId}</if>
            <if test="recordName != null  and recordName != ''"> and record_name like concat('%', #{recordName}, '%')</if>
            <if test="recordType != null  and recordType != ''"> and record_type = #{recordType}</if>
            <if test="recordGeo != null  and recordGeo != ''"> and record_geo = #{recordGeo}</if>
            <if test="recordTtl != null "> and record_ttl = #{recordTtl}</if>
            <if test="recordContent != null  and recordContent != ''"> and record_content = #{recordContent}</if>
        </where>
        ORDER BY id DESC
    </select>

    <select id="selectDnsDomainNameRecordByDomainNameId" parameterType="DnsDomainNameRecord" resultMap="DnsDomainNameRecordResult">
        <include refid="selectDnsDomainNameRecordVo"/>
        where domain_name_id = #{domainNameId}
    </select>
    
    <select id="selectDnsDomainNameRecordById" parameterType="Long" resultMap="DnsDomainNameRecordResult">
        <include refid="selectDnsDomainNameRecordVo"/>
        where id = #{id} limit 1
    </select>

    <select id="selectDnsDomainNameRecordByRecordName" parameterType="String" resultMap="DnsDomainNameRecordResult">
        <include refid="selectDnsDomainNameRecordVo"/>
        where record_name = #{recordName}
    </select>

    <select id="selectDnsDomainNameRecordNsRecordByDomainNameId" parameterType="Long" resultMap="DnsDomainNameRecordResult">
        <include refid="selectDnsDomainNameRecordVo"/>
        where domain_name_id = #{domainNameId} and record_type = 2
    </select>

    <select id="selectDnsDomainNameRecordSoaRecordByDomainNameId" parameterType="Long" resultMap="DnsDomainNameRecordResult">
        <include refid="selectDnsDomainNameRecordVo"/>
        where domain_name_id = #{domainNameId} and record_type = 6 limit 1
    </select>
        
    <insert id="insertDnsDomainNameRecord" parameterType="DnsDomainNameRecord">
        insert into dns_domain_name_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="domainNameId != null">domain_name_id,</if>
            <if test="recordName != null and recordName != ''">record_name,</if>
            <if test="recordType != null and recordType != ''">record_type,</if>
            <if test="recordGeo != null and recordGeo != ''">record_geo,</if>
            <if test="recordTtl != null">record_ttl,</if>
            <if test="recordValue != null and recordValue != ''">record_value,</if>
            <if test="recordContent != null and recordContent != ''">record_content,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="domainNameId != null">#{domainNameId},</if>
            <if test="recordName != null and recordName != ''">#{recordName},</if>
            <if test="recordType != null and recordType != ''">#{recordType},</if>
            <if test="recordGeo != null and recordGeo != ''">#{recordGeo},</if>
            <if test="recordTtl != null">#{recordTtl},</if>
            <if test="recordValue != null and recordValue != ''">#{recordValue},</if>
            <if test="recordContent != null and recordContent != ''">#{recordContent},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateDnsDomainNameRecord" parameterType="DnsDomainNameRecord">
        update dns_domain_name_record
        <trim prefix="SET" suffixOverrides=",">
            <if test="domainNameId != null">domain_name_id = #{domainNameId},</if>
            <if test="recordName != null and recordName != ''">record_name = #{recordName},</if>
            <if test="recordType != null and recordType != ''">record_type = #{recordType},</if>
            <if test="recordGeo != null and recordGeo != ''">record_geo = #{recordGeo},</if>
            <if test="recordTtl != null">record_ttl = #{recordTtl},</if>
            <if test="recordValue != null and recordValue != ''">record_value = #{recordValue},</if>
            <if test="recordContent != null and recordContent != ''">record_content = #{recordContent},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteDnsDomainNameRecordById" parameterType="Long">
        delete from dns_domain_name_record where id = #{id}
    </delete>

    <delete id="deleteDnsDomainNameRecordByDomainNameId" parameterType="Long">
        delete from dns_domain_name_record where domain_name_id = #{id}
    </delete>

    <delete id="deleteDnsDomainNameRecordByDomainNameIds" parameterType="String">
        delete from dns_domain_name_record where domain_name_id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteDnsDomainNameRecordByIds" parameterType="String">
        delete from dns_domain_name_record where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>